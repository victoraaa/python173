# test_sinkstate_list
# This used to fail
a = list(range(5))
b = iter(a)

___assertEqual(list(b), list(range(5)))

a.extend(range(5, 10))
___assertEqual(list(b), [])


#x=0

#def spem():
#    global x
#    i = x
#    x = i+1
#    if i == 10:
#        raise AssertionError("shouldn't have gotten this far")
#    return i

#c = iter(spem, 5)
#c.__next__()

#next(c)



#def test():
#    method_and_var = "var"
#    class Test:
#        def method_and_var(self):
#            return "method"
#        def test(self):
#            return method_and_var
#    return Test()

#t=test()
#print(t.test())




#a = {1:1, 2:2}

#for b in iter(a), a.keys(), a.items():
#    print(b)
