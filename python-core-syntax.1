#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 856 0 26 3 16 #"#lang plai-typed"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 66
#"This is the core language; it is just borrowing a few things from "
0 0 17 29 1 #"\n"
0 0 17 3 13 #"ParselTongue."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"CNum"
0 0 22 3 2 #" ("
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"CStr"
0 0 22 3 2 #" ("
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"string"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"CTrue"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"CSeq"
0 0 22 3 2 #" ("
0 0 14 3 2 #"e1"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 2 #"e2"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 6 #"CError"
0 0 22 3 2 #" ("
0 0 14 3 2 #"e1"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 3 #"CIf"
0 0 22 3 2 #" ("
0 0 14 3 4 #"test"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 4 #"then"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 3 #"CId"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"CLet"
0 0 22 3 2 #" ("
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 3 #") ("
0 0 14 3 9 #"scopeType"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 9 #"ScopeType"
0 0 22 3 3 #") ("
0 0 14 3 4 #"bind"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"CApp"
0 0 22 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 4 #")) ("
0 0 14 3 16 #"keywordArguments"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 2 #" ("
0 0 14 3 6 #"symbol"
0 0 22 3 1 #" "
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 5 #"))) ("
0 0 14 3 4 #"star"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 10 #"         ("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 10 #"         ("
0 0 14 3 5 #"vlist"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 2 #" ("
0 0 14 3 9 #"ScopeType"
0 0 22 3 1 #" "
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 4 #"))) "
0 0 22 29 1 #"\n"
0 0 22 3 10 #"         ("
0 0 15 3 7 #"defargs"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"         ("
0 0 14 3 6 #"vararg"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 6 #"CPrim1"
0 0 22 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 6 #"CPrim2"
0 0 22 3 2 #" ("
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 3 #") ("
0 0 14 3 2 #"e1"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 2 #"e2"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 6 #"CFalse"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"CNone"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"CPass"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 7 #"CReturn"
0 0 22 3 2 #" ("
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"CSet"
0 0 22 3 2 #" ("
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 10 #"CAttribute"
0 0 22 3 2 #" ("
0 0 14 3 4 #"attr"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 3 #") ("
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 10 #"CSubscript"
0 0 22 3 2 #" ("
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 4 #"attr"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 109
(
 #";[CBind (bind : (ScopeType * symbol))] ;;puts an identifier in the e"
 #"nvironment but does nothing in the store."
) 0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 8 #"CUnbound"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 10 #"CGlobalEnv"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 32 #";; lists and dicts become hashes"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 36 #";[CList (elts : (hashof CExp CExp))]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 36 #";[CDict (elts : (hashof CExp CExp))]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 37 #";[CTuple (elts : (hashof CExp CExp))]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"CHash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"elts"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"hashof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"CType"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 18 #";; TEMPORARY class"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 6 #"CClass"
0 0 22 3 2 #" ("
0 0 14 3 4 #"elts"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"hashof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"VType"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 34 #";; type to help create a new class"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 12 #"CCreateClass"
0 0 22 3 2 #" ("
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 3 #") ("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 5 #"vlist"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 2 #" ("
0 0 14 3 9 #"ScopeType"
0 0 22 3 1 #" "
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 27 #";; Exception handling types"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 10 #"CTryExcept"
0 0 22 3 2 #" ("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 8 #"handlers"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 17 #"CExceptionHandler"
0 0 22 3 4 #")) ("
0 0 14 3 6 #"orelse"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 11 #"CTryFinally"
0 0 22 3 2 #" ("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 9 #"finalbody"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 10 #"C-NotExist"
0 0 22 3 2 #" ("
0 0 14 3 1 #"a"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 3 #")] "
0 0 17 3 102
(
 #";;THIS IS HERE ONLY SO THAT python-interp won't complain about havin"
 #"g completed all of the expressions"
) 0 0 22 29 1 #"\n"
0 0 22 3 3 #"  )"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 22 3 1 #" "
0 0 14 3 17 #"CExceptionHandler"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 11 #"CExcHandler"
0 0 22 3 2 #" ("
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 3 #") ("
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"VNum"
0 0 22 3 2 #" ("
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"VStr"
0 0 22 3 2 #" ("
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"string"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"VTrue"
0 0 22 3 1 #"]"
0 0 14 3 1 #"\\"
0 0 14 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 8 #"VClosure"
0 0 22 3 2 #" ("
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Env"
0 0 22 3 3 #") ("
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 4 #")) ("
0 0 14 3 6 #"vararg"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 3 #") ("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #") ("
0 0 15 3 7 #"defargs"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 4 #")) ("
0 0 14 3 3 #"uid"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Uid"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 11 #";;I ADDED;;"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"VNone"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 6 #"VFalse"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"VPass"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 8 #"VUnbound"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 93
(
 #";[VList (elts : (hashof CVal CVal)) (uid : Uid)] ;; lists must be ke"
 #"yed byintegers, though..."
) 0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 48 #";[VDict (elts : (hashof CVal CVal)) (uid : Uid)]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 49 #";[VTuple (elts : (hashof CVal CVal)) (uid : Uid)]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"VHash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"elts"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 5 #"boxof"
0 0 22 3 2 #" ("
0 0 14 3 6 #"hashof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 5 #"))) ("
0 0 14 3 3 #"uid"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Uid"
0 0 22 3 3 #") ("
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"VType"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 6 #"VClass"
0 0 22 3 2 #" ("
0 0 14 3 4 #"elts"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"hashof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"VType"
0 0 22 3 4 #")]  "
0 0 17 3 142
(
 #";;INCOMPLETE ;;INCOMPLETE ;;INCOMPLETE ;;INCOMPLETE ;;INCOMPLETE ;;I"
 #"NCOMPLETE ;;INCOMPLETE ;;INCOMPLETE ;;INCOMPLETE ;;INCOMPLETE ;;INCO"
 #"MPLETE"
) 0 0 22 29 1 #"\n"
0 0 22 3 3 #"  )"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 22 3 1 #" "
0 0 14 3 5 #"VType"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"Type"
0 0 22 3 2 #" ("
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"string"
0 0 22 3 3 #") ("
0 0 14 3 8 #"baseType"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 22 3 1 #" "
0 0 14 3 5 #"CType"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"cType"
0 0 22 3 2 #" ("
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"string"
0 0 22 3 3 #") ("
0 0 14 3 8 #"basetype"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 4 #")]) "
0 0 17 3 51 #";;this is used to create a VType from the desugarer"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 22 3 1 #" "
0 0 14 3 8 #"Location"
0 0 22 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 22 3 1 #" "
0 0 14 3 9 #"ScopeType"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 5 #"Local"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 8 #"NonLocal"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 6 #"Global"
0 0 22 3 2 #"])"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 22 3 1 #" "
0 0 14 3 3 #"Uid"
0 0 22 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 22 3 1 #" "
0 0 14 3 7 #"SLTuple"
0 0 22 3 2 #" ("
0 0 14 3 9 #"ScopeType"
0 0 22 3 1 #" "
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 22 3 1 #" "
0 0 14 3 3 #"Env"
0 0 22 3 2 #" ("
0 0 14 3 6 #"hashof"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 1 #" "
0 0 14 3 7 #"SLTuple"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 2 #" ("
0 0 14 3 6 #"hashof"
0 0 22 3 1 #" "
0 0 14 3 8 #"Location"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 22 3 1 #" "
0 0 14 3 7 #"AnswerC"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 6 #"ValueA"
0 0 22 3 2 #" ("
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 3 #") ("
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 10 #"ExceptionA"
0 0 22 3 2 #" ("
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 3 #") ("
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 7 #"ReturnA"
0 0 22 3 2 #" ("
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 3 #") ("
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 17 3 41 #"; [BreakA (value : CVal) (store : Store)]"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 17 3 29 #"; [ContinueA (store : Store)]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  )"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0           0
