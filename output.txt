33 tests succeeded.
57 tests failed.
== Output of failed tests ==
=====================================================
= Results for bool-callable.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: callable
=====================================================
= Results for bool-convert.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp-AppC: Application failed with arity mismatch
=====================================================
= Results for bool-isinstance.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: isinstance
=====================================================
= Results for all.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((type . "GeneratorExp")
        (generators
         .
         (#hasheq((target
                   .
                   #hasheq((id . "x")
                           (type . "Name")
                           (ctx . #hasheq((type . "Store")))))
                  (type . "comprehension")
                  (iter
                   .
                   #hasheq((id . "S")
                           (type . "Name")
                           (ctx . #hasheq((type . "Load")))))
                  (ifs . ()))))
        (elt
         .
         #hasheq((left
                  .
                  #hasheq((id . "x")
                          (type . "Name")
                          (ctx . #hasheq((type . "Load")))))
                 (ops . (#hasheq((type . "Gt"))))
                 (comparators . (#hasheq((n . 42) (type . "Num"))))
                 (type . "Compare"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for any.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((type . "GeneratorExp")
        (generators
         .
         (#hasheq((target
                   .
                   #hasheq((id . "x")
                           (type . "Name")
                           (ctx . #hasheq((type . "Store")))))
                  (type . "comprehension")
                  (iter
                   .
                   #hasheq((id . "S")
                           (type . "Name")
                           (ctx . #hasheq((type . "Load")))))
                  (ifs . ()))))
        (elt
         .
         #hasheq((left
                  .
                  #hasheq((id . "x")
                          (type . "Name")
                          (ctx . #hasheq((type . "Load")))))
                 (ops . (#hasheq((type . "Gt"))))
                 (comparators . (#hasheq((n . 42) (type . "Num"))))
                 (type . "Compare"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for callable.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body
         .
         (#hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body . (#hasheq((type . "Pass"))))
                  (name . "meth")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))))
        (name . "C1")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for filter.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: list
=====================================================
= Results for isinstance.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body . (#hasheq((type . "Pass"))))
        (name . "C")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-clear.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((attr . "clear")
        (value
         .
         #hasheq((id . "d") (type . "Name") (ctx . #hasheq((type . "Load")))))
        (type . "Attribute")
        (ctx . #hasheq((type . "Load"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-get.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((attr . "get")
        (value
         .
         #hasheq((id . "d") (type . "Name") (ctx . #hasheq((type . "Load")))))
        (type . "Attribute")
        (ctx . #hasheq((type . "Load"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-getitem.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((value
         .
         #hasheq((id . "d") (type . "Name") (ctx . #hasheq((type . "Load")))))
        (type . "Subscript")
        (ctx . #hasheq((type . "Load")))
        (slice
         .
         #hasheq((value . #hasheq((s . "a") (type . "Str")))
                 (type . "Index"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-items.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((attr . "items")
        (value
         .
         #hasheq((id . "d") (type . "Name") (ctx . #hasheq((type . "Load")))))
        (type . "Attribute")
        (ctx . #hasheq((type . "Load"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-keys.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((attr . "keys")
        (value
         .
         #hasheq((id . "d") (type . "Name") (ctx . #hasheq((type . "Load")))))
        (type . "Attribute")
        (ctx . #hasheq((type . "Load"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-set-keys.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((attr . "keys")
        (value
         .
         #hasheq((values
                  .
                  (#hasheq((n . 1) (type . "Num"))
                   #hasheq((n . 2) (type . "Num"))))
                 (keys
                  .
                  (#hasheq((n . 1) (type . "Num"))
                   #hasheq((n . 2) (type . "Num"))))
                 (type . "Dict")))
        (type . "Attribute")
        (ctx . #hasheq((type . "Load"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-update.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((attr . "update")
        (value
         .
         #hasheq((id . "d") (type . "Name") (ctx . #hasheq((type . "Load")))))
        (type . "Attribute")
        (ctx . #hasheq((type . "Load"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-values-set.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((attr . "items")
        (value
         .
         #hasheq((values
                  .
                  (#hasheq((n . 1) (type . "Num"))
                   #hasheq((n . 2) (type . "Num"))))
                 (keys
                  .
                  (#hasheq((n . 1) (type . "Num"))
                   #hasheq((n . 2) (type . "Num"))))
                 (type . "Dict")))
        (type . "Attribute")
        (ctx . #hasheq((type . "Load"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-values.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((attr . "values")
        (value
         .
         #hasheq((id . "d") (type . "Name") (ctx . #hasheq((type . "Load")))))
        (type . "Attribute")
        (ctx . #hasheq((type . "Load"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for except-reraise.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: ___assertRaises
=====================================================
= Results for nested-else.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for nested-reraise.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#\nul

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for nested.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for test-finally-reraise.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: ___assertRaises
=====================================================
= Results for test-try-except-else.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for test-try-except.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for try-except-else-finally-no-exception.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for try-except-else-finally.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for try-except-else-no-exception.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for try-except-finally-no-exception.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for try-except-finally.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for try-finally-no-exception.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: value is False
=====================================================
= Results for iter-classes.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body
         .
         (#hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))
                             #hasheq((arg . "n")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((targets
                             .
                             (#hasheq((attr . "n")
                                      (value
                                       .
                                       #hasheq((id . "self")
                                               (type . "Name")
                                               (ctx
                                                .
                                                #hasheq((type . "Load")))))
                                      (type . "Attribute")
                                      (ctx . #hasheq((type . "Store"))))))
                            (value
                             .
                             #hasheq((id . "n")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Assign"))
                    #hasheq((targets
                             .
                             (#hasheq((attr . "i")
                                      (value
                                       .
                                       #hasheq((id . "self")
                                               (type . "Name")
                                               (ctx
                                                .
                                                #hasheq((type . "Load")))))
                                      (type . "Attribute")
                                      (ctx . #hasheq((type . "Store"))))))
                            (value . #hasheq((n . 0) (type . "Num")))
                            (type . "Assign"))))
                  (name . "__init__")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))
          #hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((targets
                             .
                             (#hasheq((id . "res")
                                      (type . "Name")
                                      (ctx . #hasheq((type . "Store"))))))
                            (value
                             .
                             #hasheq((attr . "i")
                                     (value
                                      .
                                      #hasheq((id . "self")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load")))))
                                     (type . "Attribute")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Assign"))
                    #hasheq((orelse . ())
                            (body
                             .
                             (#hasheq((exc
                                       .
                                       #hasheq((id . "StopIteration")
                                               (type . "Name")
                                               (ctx
                                                .
                                                #hasheq((type . "Load")))))
                                      (type . "Raise")
                                      (cause . #\nul))))
                            (test
                             .
                             #hasheq((left
                                      .
                                      #hasheq((id . "res")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load")))))
                                     (ops . (#hasheq((type . "GtE"))))
                                     (comparators
                                      .
                                      (#hasheq((attr . "n")
                                               (value
                                                .
                                                #hasheq((id . "self")
                                                        (type . "Name")
                                                        (ctx
                                                         .
                                                         #hasheq((type
                                                                  .
                                                                  "Load")))))
                                               (type . "Attribute")
                                               (ctx
                                                .
                                                #hasheq((type . "Load"))))))
                                     (type . "Compare")))
                            (type . "If"))
                    #hasheq((targets
                             .
                             (#hasheq((attr . "i")
                                      (value
                                       .
                                       #hasheq((id . "self")
                                               (type . "Name")
                                               (ctx
                                                .
                                                #hasheq((type . "Load")))))
                                      (type . "Attribute")
                                      (ctx . #hasheq((type . "Store"))))))
                            (value
                             .
                             #hasheq((op . #hasheq((type . "Add")))
                                     (left
                                      .
                                      #hasheq((id . "res")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load")))))
                                     (right . #hasheq((n . 1) (type . "Num")))
                                     (type . "BinOp")))
                            (type . "Assign"))
                    #hasheq((value
                             .
                             #hasheq((id . "res")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Return"))))
                  (name . "__next__")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))))
        (name . "BasicIterClass")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for iter-comprehensions.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((orelse . ())
        (body
         .
         (#hasheq((orelse . ())
                  (body
                   .
                   (#hasheq((orelse . ())
                            (body
                             .
                             (#hasheq((value
                                       .
                                       #hasheq((args
                                                .
                                                (#hasheq((elts
                                                          .
                                                          (#hasheq((id . "i")
                                                                   (type
                                                                    .
                                                                    "Name")
                                                                   (ctx
                                                                    .
                                                                    #hasheq((type
                                                                             .
                                                                             "Load"))))
                                                           #hasheq((id . "j")
                                                                   (type
                                                                    .
                                                                    "Name")
                                                                   (ctx
                                                                    .
                                                                    #hasheq((type
                                                                             .
                                                                             "Load"))))
                                                           #hasheq((id . "k")
                                                                   (type
                                                                    .
                                                                    "Name")
                                                                   (ctx
                                                                    .
                                                                    #hasheq((type
                                                                             .
                                                                             "Load"))))))
                                                         (type . "Tuple")
                                                         (ctx
                                                          .
                                                          #hasheq((type
                                                                   .
                                                                   "Load"))))))
                                               (type . "Call")
                                               (keywords . ())
                                               (kwargs . #\nul)
                                               (starargs . #\nul)
                                               (func
                                                .
                                                #hasheq((attr . "append")
                                                        (value
                                                         .
                                                         #hasheq((id . "res")
                                                                 (type
                                                                  .
                                                                  "Name")
                                                                 (ctx
                                                                  .
                                                                  #hasheq((type
                                                                           .
                                                                           "Load")))))
                                                        (type . "Attribute")
                                                        (ctx
                                                         .
                                                         #hasheq((type
                                                                  .
                                                                  "Load")))))))
                                      (type . "Expr"))))
                            (target
                             .
                             #hasheq((id . "k")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Store")))))
                            (type . "For")
                            (iter
                             .
                             #hasheq((args
                                      .
                                      (#hasheq((id . "seq")
                                               (type . "Name")
                                               (ctx
                                                .
                                                #hasheq((type . "Load"))))))
                                     (type . "Call")
                                     (keywords . ())
                                     (kwargs . #\nul)
                                     (starargs . #\nul)
                                     (func
                                      .
                                      #hasheq((id . "iter")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load"))))))))))
                  (target
                   .
                   #hasheq((id . "j")
                           (type . "Name")
                           (ctx . #hasheq((type . "Store")))))
                  (type . "For")
                  (iter
                   .
                   #hasheq((args
                            .
                            (#hasheq((id . "seq")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load"))))))
                           (type . "Call")
                           (keywords . ())
                           (kwargs . #\nul)
                           (starargs . #\nul)
                           (func
                            .
                            #hasheq((id . "iter")
                                    (type . "Name")
                                    (ctx . #hasheq((type . "Load"))))))))))
        (target
         .
         #hasheq((id . "i") (type . "Name") (ctx . #hasheq((type . "Store")))))
        (type . "For")
        (iter
         .
         #hasheq((args
                  .
                  (#hasheq((id . "seq")
                           (type . "Name")
                           (ctx . #hasheq((type . "Load"))))))
                 (type . "Call")
                 (keywords . ())
                 (kwargs . #\nul)
                 (starargs . #\nul)
                 (func
                  .
                  #hasheq((id . "iter")
                          (type . "Name")
                          (ctx . #hasheq((type . "Load"))))))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for iter-misc.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((orelse . ())
        (body
         .
         (#hasheq((orelse . ())
                  (body
                   .
                   (#hasheq((targets
                             .
                             (#hasheq((id . "val")
                                      (type . "Name")
                                      (ctx . #hasheq((type . "Store"))))))
                            (value
                             .
                             #hasheq((args
                                      .
                                      (#hasheq((id . "it")
                                               (type . "Name")
                                               (ctx
                                                .
                                                #hasheq((type . "Load"))))))
                                     (type . "Call")
                                     (keywords . ())
                                     (kwargs . #\nul)
                                     (starargs . #\nul)
                                     (func
                                      .
                                      #hasheq((id . "next")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load")))))))
                            (type . "Assign"))))
                  (type . "TryExcept")
                  (handlers
                   .
                   (#hasheq((body . (#hasheq((type . "Break"))))
                            (name . #\nul)
                            (type . "ExceptHandler")))))
          #hasheq((value
                   .
                   #hasheq((args
                            .
                            (#hasheq((id . "val")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load"))))))
                           (type . "Call")
                           (keywords . ())
                           (kwargs . #\nul)
                           (starargs . #\nul)
                           (func
                            .
                            #hasheq((attr . "append")
                                    (value
                                     .
                                     #hasheq((id . "res")
                                             (type . "Name")
                                             (ctx . #hasheq((type . "Load")))))
                                    (type . "Attribute")
                                    (ctx . #hasheq((type . "Load")))))))
                  (type . "Expr"))))
        (test . #hasheq((n . 1) (type . "Num")))
        (type . "While"))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for iter-simple.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((orelse . ())
        (body
         .
         (#hasheq((orelse . ())
                  (body
                   .
                   (#hasheq((targets
                             .
                             (#hasheq((id . "val")
                                      (type . "Name")
                                      (ctx . #hasheq((type . "Store"))))))
                            (value
                             .
                             #hasheq((args
                                      .
                                      (#hasheq((id . "it")
                                               (type . "Name")
                                               (ctx
                                                .
                                                #hasheq((type . "Load"))))))
                                     (type . "Call")
                                     (keywords . ())
                                     (kwargs . #\nul)
                                     (starargs . #\nul)
                                     (func
                                      .
                                      #hasheq((id . "next")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load")))))))
                            (type . "Assign"))))
                  (type . "TryExcept")
                  (handlers
                   .
                   (#hasheq((body . (#hasheq((type . "Break"))))
                            (name . #\nul)
                            (type . "ExceptHandler")))))
          #hasheq((value
                   .
                   #hasheq((args
                            .
                            (#hasheq((id . "val")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load"))))))
                           (type . "Call")
                           (keywords . ())
                           (kwargs . #\nul)
                           (starargs . #\nul)
                           (func
                            .
                            #hasheq((attr . "append")
                                    (value
                                     .
                                     #hasheq((id . "res")
                                             (type . "Name")
                                             (ctx . #hasheq((type . "Load")))))
                                    (type . "Attribute")
                                    (ctx . #hasheq((type . "Load")))))))
                  (type . "Expr"))))
        (test . #hasheq((n . 1) (type . "Num")))
        (type . "While"))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for iter-stop.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((attr . "extend")
        (value
         .
         #hasheq((id . "a") (type . "Name") (ctx . #hasheq((type . "Load")))))
        (type . "Attribute")
        (ctx . #hasheq((type . "Load"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for test_list_simple.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: list
=====================================================
= Results for range-errs.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: ___assertRaises
=====================================================
= Results for range-list.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: list
=====================================================
= Results for range-vars.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: list
=====================================================
= Results for bound-and-free.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body
         .
         (#hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value
                             .
                             #hasheq((id . "x")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Return"))))
                  (name . "m")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))
          #hasheq((targets
                   .
                   (#hasheq((id . "a")
                            (type . "Name")
                            (ctx . #hasheq((type . "Store"))))))
                  (value
                   .
                   #hasheq((id . "x")
                           (type . "Name")
                           (ctx . #hasheq((type . "Load")))))
                  (type . "Assign"))))
        (name . "C")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for freevar-in-method.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body
         .
         (#hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value . #hasheq((s . "method") (type . "Str")))
                            (type . "Return"))))
                  (name . "method_and_var")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))
          #hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value
                             .
                             #hasheq((id . "method_and_var")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Return"))))
                  (name . "test")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))
          #hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value
                             .
                             #hasheq((args
                                      .
                                      (#hasheq((s . "global") (type . "Str"))))
                                     (type . "Call")
                                     (keywords . ())
                                     (kwargs . #\nul)
                                     (starargs . #\nul)
                                     (func
                                      .
                                      #hasheq((id . "str")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load")))))))
                            (type . "Return"))))
                  (name . "actual_global")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))
          #hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value
                             .
                             #hasheq((args
                                      .
                                      (#hasheq((id . "self")
                                               (type . "Name")
                                               (ctx
                                                .
                                                #hasheq((type . "Load"))))))
                                     (type . "Call")
                                     (keywords . ())
                                     (kwargs . #\nul)
                                     (starargs . #\nul)
                                     (func
                                      .
                                      #hasheq((id . "str")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load")))))))
                            (type . "Return"))))
                  (name . "str")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))))
        (name . "Test")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for locals-class.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body
         .
         (#hasheq((targets
                   .
                   (#hasheq((id . "x")
                            (type . "Name")
                            (ctx . #hasheq((type . "Store"))))))
                  (value . #hasheq((n . 12) (type . "Num")))
                  (type . "Assign"))
          #hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value
                             .
                             #hasheq((id . "x")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Return"))))
                  (name . "m")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))
          #hasheq((value
                   .
                   #hasheq((args . ())
                           (type . "Call")
                           (keywords . ())
                           (kwargs . #\nul)
                           (starargs . #\nul)
                           (func
                            .
                            #hasheq((id . "locals")
                                    (type . "Name")
                                    (ctx . #hasheq((type . "Load")))))))
                  (type . "Expr"))))
        (name . "C")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for locals-function.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((targets
         .
         (#hasheq((value
                   .
                   #hasheq((id . "d")
                           (type . "Name")
                           (ctx . #hasheq((type . "Load")))))
                  (type . "Subscript")
                  (ctx . #hasheq((type . "Del")))
                  (slice
                   .
                   #hasheq((value . #hasheq((s . "h") (type . "Str")))
                           (type . "Index"))))))
        (type . "Delete"))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for nested-nonlocal.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: Assert failed: values are not Equal
=====================================================
= Results for nesting-through-class.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body
         .
         (#hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))
                             #hasheq((arg . "y")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value
                             .
                             #hasheq((op . #hasheq((type . "Add")))
                                     (left
                                      .
                                      #hasheq((id . "x")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load")))))
                                     (right
                                      .
                                      #hasheq((id . "y")
                                              (type . "Name")
                                              (ctx
                                               .
                                               #hasheq((type . "Load")))))
                                     (type . "BinOp")))
                            (type . "Return"))))
                  (name . "__call__")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))))
        (name . "Adder")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for nonlocal-class.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body
         .
         (#hasheq((type . "Nonlocal") (names . ("x")))
          #hasheq((op . #hasheq((type . "Add")))
                  (value . #hasheq((n . 1) (type . "Num")))
                  (target
                   .
                   #hasheq((id . "x")
                           (type . "Name")
                           (ctx . #hasheq((type . "Store")))))
                  (type . "AugAssign"))
          #hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value
                             .
                             #hasheq((id . "x")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Return"))))
                  (name . "get")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))))
        (name . "c")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for nonlocal-function.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
get-vars-PyAssign: PyAssign should not be getting non-ids yet
=====================================================
= Results for nonlocal-method.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body
         .
         (#hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((type . "Nonlocal") (names . ("x")))
                    #hasheq((op . #hasheq((type . "Add")))
                            (value . #hasheq((n . 1) (type . "Num")))
                            (target
                             .
                             #hasheq((id . "x")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Store")))))
                            (type . "AugAssign"))
                    #hasheq((value
                             .
                             #hasheq((id . "x")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Return"))))
                  (name . "inc")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))
          #hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((type . "Nonlocal") (names . ("x")))
                    #hasheq((op . #hasheq((type . "Sub")))
                            (value . #hasheq((n . 1) (type . "Num")))
                            (target
                             .
                             #hasheq((id . "x")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Store")))))
                            (type . "AugAssign"))
                    #hasheq((value
                             .
                             #hasheq((id . "x")
                                     (type . "Name")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Return"))))
                  (name . "dec")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))))
        (name . "c")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for unbound-local.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: ___assertRaises
=====================================================
= Results for test-super.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body
         .
         (#hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "self")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value . #hasheq((s . "A") (type . "Str")))
                            (type . "Return"))))
                  (name . "f")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list . ()))
          #hasheq((args
                   .
                   #hasheq((args
                            .
                            (#hasheq((arg . "cls")
                                     (type . "arg")
                                     (annotation . #\nul))))
                           (type . "arguments")
                           (vararg . #\nul)
                           (varargannotation . #\nul)
                           (kwonlyargs . ())
                           (kwarg . #\nul)
                           (kwargannotation . #\nul)
                           (defaults . ())
                           (kw_defaults . ())))
                  (body
                   .
                   (#hasheq((value
                             .
                             #hasheq((elts
                                      .
                                      (#hasheq((id . "cls")
                                               (type . "Name")
                                               (ctx
                                                .
                                                #hasheq((type . "Load"))))
                                       #hasheq((s . "A") (type . "Str"))))
                                     (type . "Tuple")
                                     (ctx . #hasheq((type . "Load")))))
                            (type . "Return"))))
                  (name . "cm")
                  (type . "FunctionDef")
                  (returns . #\nul)
                  (decorator_list
                   .
                   (#hasheq((id . "classmethod")
                            (type . "Name")
                            (ctx . #hasheq((type . "Load")))))))))
        (name . "A")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for tuple-add.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: +: Cannot do math on this type... Sorry!
=====================================================
= Results for tuple-constructors.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: tuple
=====================================================
= Results for tuple-mul.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp: *: Cannot do math on this type!
=====================================================
= Results for test_simple_string_ops.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: min
=====================================================
= Results for test_string_slices.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((value
         .
         #hasheq((id . "a") (type . "Name") (ctx . #hasheq((type . "Load")))))
        (type . "Subscript")
        (ctx . #hasheq((type . "Load")))
        (slice
         .
         #hasheq((type . "Slice")
                 (upper . #\nul)
                 (lower . #\nul)
                 (step . #\nul))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for types_truthy1.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound indentifier error: Exception
=====================================================
= Results for types_truthy2.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((body . (#hasheq((type . "Pass"))))
        (name . "C")
        (type . "ClassDef")
        (decorator_list . ())
        (keywords . ())
        (kwargs . #\nul)
        (starargs . #\nul)
        (bases . ()))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
