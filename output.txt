
C:\Dropbox\Brown\! Programming Languages\Homework\Python\python173>Racket python-main.rkt --python-path C:\Python32\python.exe --test "C:\Dropbox\Brown\! Programming Languages\Homework\Python\python173\python-reference\\" 
67 tests succeeded.
23 tests failed.
== Output of failed tests ==
=====================================================
= Results for all.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((nodetype . "GeneratorExp")
        (generators
         .
         (#hasheq((target
                   .
                   #hasheq((id . "x")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Store")))))
                  (iter
                   .
                   #hasheq((id . "S")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Load")))))
                  (nodetype . "comprehension")
                  (ifs . ()))))
        (elt
         .
         #hasheq((left
                  .
                  #hasheq((id . "x")
                          (nodetype . "Name")
                          (ctx . #hasheq((nodetype . "Load")))))
                 (ops . (#hasheq((nodetype . "Gt"))))
                 (comparators . (#hasheq((n . 42) (nodetype . "Num"))))
                 (nodetype . "Compare"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for any.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((nodetype . "GeneratorExp")
        (generators
         .
         (#hasheq((target
                   .
                   #hasheq((id . "x")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Store")))))
                  (iter
                   .
                   #hasheq((id . "S")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Load")))))
                  (nodetype . "comprehension")
                  (ifs . ()))))
        (elt
         .
         #hasheq((left
                  .
                  #hasheq((id . "x")
                          (nodetype . "Name")
                          (ctx . #hasheq((nodetype . "Load")))))
                 (ops . (#hasheq((nodetype . "Gt"))))
                 (comparators . (#hasheq((n . 42) (nodetype . "Num"))))
                 (nodetype . "Compare"))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for filter.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
exception: TypeError'#&#hash()
=====================================================
= Results for dict-getitem.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
exception: Assert failed: values are not Equal: dict(box (hash #1=(VStr "a") (VNum 4) #2=(VStr "c") (VNum 3) (VStr "__keys__") (VHash (box (hash #1# #1# #2# #2#)) 2036 (Type "set" (VHash (box (hash (VStr "__name__") (VStr "set") (VStr "__convert__") (VClosure (hash 'list (vector (NonLocal) 3748) 'abs (vector (NonLocal) 3736) 'print (vector (NonLocal) 3655) 'str (vector (NonLocal) 3742) 'bool (vector (NonLocal) 3740) 'python-add (vector (NonLocal) 3687) 'python-sub (vector (NonLocal) 3690) 'python-mult (vector (NonLocal) 3693) 'python-div (vector (NonLocal) 3696) 'python-floor-div (vector (NonLocal) 3699) 'python-mod (vector (NonLocal) 3702) 'python-lt (vector (NonLocal) 3705) 'python-lte (vector (NonLocal) 3708) 'python-gt (vector (NonLocal) 3711) 'python-gte (vector (NonLocal) 3714) 'python-eq (vector (NonLocal) 3717) 'python-notEq (vector (NonLocal) 3720) 'python-is (vector (NonLocal) 3723) 'python-isNot (vector (NonLocal) 3726) 'python-in (vector (NonLocal) 3729) 'python-notIn (vector (NonLocal) 3732) 'len (vector (NonLocal) 3734) 'True (vector (NonLocal) 3656) '___assertTrue (vector (NonLocal) 3658) '___assertFalse (vector (NonLocal) 3660) 'e-1 (vector (Local) 3762) '___assertIn (vector (NonLocal) 3663) '___assertNotIn (vector (NonLocal) 3666) '___assertEqual (vector (NonLocal) 3669) '___assertNotEqual (vector (NonLocal) 3672) '___assertIs (vector (NonLocal) 3675) '___assertIsNot (vector (NonLocal) 3678) '___assertRaises (vector (NonLocal) 3682) '___fail (vector (NonLocal) 3684) '_Object (vector (NonLocal) 3738) 'float (vector (NonLocal) 3744) 'int (vector (NonLocal) 3746) 'tuple (vector (NonLocal) 3751) 'dict (vector (NonLocal) 3761)) '(e-1) 'no-vararg (CIf (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "set")) (CId 'e-1) (CIf (CPrim2 'or (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "list")) (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "tuple"))) (CPrim1 'to-set (CId 'e-1)) (CError (CApp (CId 'TypeError) '() '() (CHash (hash (CStr "__size__") (CNum 0)) (cType "list" (CId 'list))))))) (list (VHash (box (hash (VStr "__size__") (VNum 0))) 2007 (Type "list" (VHash (box (hash (VStr "__name__") (VStr "list") (VStr "__size__") (VNum 0) (VStr "__convert__") (VClosure (hash 'abs (vector (NonLocal) 3736) 'print (vector (NonLocal) 3655) 'str (vector (NonLocal) 3742) 'bool (vector (NonLocal) 3740) 'python-add (vector (NonLocal) 3687) 'python-sub (vector (NonLocal) 3690) 'python-mult (vector (NonLocal) 3693) 'python-div (vector (NonLocal) 3696) 'python-floor-div (vector (NonLocal) 3699) 'python-mod (vector (NonLocal) 3702) 'python-lt (vector (NonLocal) 3705) 'python-lte (vector (NonLocal) 3708) 'python-gt (vector (NonLocal) 3711) 'python-gte (vector (NonLocal) 3714) 'python-eq (vector (NonLocal) 3717) 'python-notEq (vector (NonLocal) 3720) 'python-is (vector (NonLocal) 3723) 'python-isNot (vector (NonLocal) 3726) 'python-in (vector (NonLocal) 3729) 'python-notIn (vector (NonLocal) 3732) 'len (vector (NonLocal) 3734) 'True (vector (NonLocal) 3656) '___assertTrue (vector (NonLocal) 3658) '___assertFalse (vector (NonLocal) 3660) 'e-1 (vector (Local) 3747) '___assertIn (vector (NonLocal) 3663) '___assertNotIn (vector (NonLocal) 3666) '___assertEqual (vector (NonLocal) 3669) '___assertNotEqual (vector (NonLocal) 3672) '___assertIs (vector (NonLocal) 3675) '___assertIsNot (vector (NonLocal) 3678) '___assertRaises (vector (NonLocal) 3682) '___fail (vector (NonLocal) 3684) '_Object (vector (NonLocal) 3738) 'float (vector (NonLocal) 3744) 'int (vector (NonLocal) 3746)) '(e-1) 'no-vararg (CIf (CPrim2 'or (CPrim2 'or (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "set")) (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "list"))) (CPrim2 'or (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "tuple")) (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "string")))) (CPrim1 'to-list (CId 'e-1)) (CError (CApp (CId 'TypeError) '() '() (CHash (hash (CStr "__size__") (CNum 0)) (cType "list" (CId 'list)))))) (list (VStr "")) 1996))) 1997 (Type "primitive-class" #0=(VHash (box (hash (VStr "__name__") (VStr "Object") (VStr "__init__") (VClosure (hash 'abs (vector (NonLocal) 3736) 'print (vector (NonLocal) 3655) 'python-add (vector (NonLocal) 3687) 'python-sub (vector (NonLocal) 3690) 'python-mult (vector (NonLocal) 3693) 'python-div (vector (NonLocal) 3696) 'python-floor-div (vector (NonLocal) 3699) 'python-mod (vector (NonLocal) 3702) 'python-lt (vector (NonLocal) 3705) 'python-lte (vector (NonLocal) 3708) 'python-gt (vector (NonLocal) 3711) 'python-gte (vector (NonLocal) 3714) 'python-eq (vector (NonLocal) 3717) 'python-notEq (vector (NonLocal) 3720) 'python-is (vector (NonLocal) 3723) 'python-isNot (vector (NonLocal) 3726) 'python-in (vector (NonLocal) 3729) 'python-notIn (vector (NonLocal) 3732) 'len (vector (NonLocal) 3734) 'True (vector (NonLocal) 3656) '___assertTrue (vector (NonLocal) 3658) '___assertFalse (vector (NonLocal) 3660) 'e-1 (vector (Local) 3737) '___assertIn (vector (NonLocal) 3663) '___assertNotIn (vector (NonLocal) 3666) '___assertEqual (vector (NonLocal) 3669) '___assertNotEqual (vector (NonLocal) 3672) '___assertIs (vector (NonLocal) 3675) '___assertIsNot (vector (NonLocal) 3678) '___assertRaises (vector (NonLocal) 3682) '___fail (vector (NonLocal) 3684)) '(e-1) 'no-vararg (CPass) (list (VFalse)) 1986))) 1987 (Type "class" (VNone)))))))) 2008))) 2009 (Type "primitive-class" #0#)))) (VStr "__size__") (VNum 1)))dict(box (hash (VStr "a") (VNum 4) (VStr "c") (VNum 3) (VStr "__keys__") (VHash (box (hash (VStr "a") (VStr "a") (VStr "c") (VStr "c"))) 2047 (Type "set" (VHash (box (hash (VStr "__name__") (VStr "set") (VStr "__convert__") (VClosure (hash 'list (vector (NonLocal) 3748) 'abs (vector (NonLocal) 3736) 'print (vector (NonLocal) 3655) 'str (vector (NonLocal) 3742) 'bool (vector (NonLocal) 3740) 'python-add (vector (NonLocal) 3687) 'python-sub (vector (NonLocal) 3690) 'python-mult (vector (NonLocal) 3693) 'python-div (vector (NonLocal) 3696) 'python-floor-div (vector (NonLocal) 3699) 'python-mod (vector (NonLocal) 3702) 'python-lt (vector (NonLocal) 3705) 'python-lte (vector (NonLocal) 3708) 'python-gt (vector (NonLocal) 3711) 'python-gte (vector (NonLocal) 3714) 'python-eq (vector (NonLocal) 3717) 'python-notEq (vector (NonLocal) 3720) 'python-is (vector (NonLocal) 3723) 'python-isNot (vector (NonLocal) 3726) 'python-in (vector (NonLocal) 3729) 'python-notIn (vector (NonLocal) 3732) 'len (vector (NonLocal) 3734) 'True (vector (NonLocal) 3656) '___assertTrue (vector (NonLocal) 3658) '___assertFalse (vector (NonLocal) 3660) 'e-1 (vector (Local) 3762) '___assertIn (vector (NonLocal) 3663) '___assertNotIn (vector (NonLocal) 3666) '___assertEqual (vector (NonLocal) 3669) '___assertNotEqual (vector (NonLocal) 3672) '___assertIs (vector (NonLocal) 3675) '___assertIsNot (vector (NonLocal) 3678) '___assertRaises (vector (NonLocal) 3682) '___fail (vector (NonLocal) 3684) '_Object (vector (NonLocal) 3738) 'float (vector (NonLocal) 3744) 'int (vector (NonLocal) 3746) 'tuple (vector (NonLocal) 3751) 'dict (vector (NonLocal) 3761)) '(e-1) 'no-vararg (CIf (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "set")) (CId 'e-1) (CIf (CPrim2 'or (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "list")) (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "tuple"))) (CPrim1 'to-set (CId 'e-1)) (CError (CApp (CId 'TypeError) '() '() (CHash (hash (CStr "__size__") (CNum 0)) (cType "list" (CId 'list))))))) (list (VHash (box (hash (VStr "__size__") (VNum 0))) 2007 (Type "list" (VHash (box (hash (VStr "__name__") (VStr "list") (VStr "__size__") (VNum 0) (VStr "__convert__") (VClosure (hash 'abs (vector (NonLocal) 3736) 'print (vector (NonLocal) 3655) 'str (vector (NonLocal) 3742) 'bool (vector (NonLocal) 3740) 'python-add (vector (NonLocal) 3687) 'python-sub (vector (NonLocal) 3690) 'python-mult (vector (NonLocal) 3693) 'python-div (vector (NonLocal) 3696) 'python-floor-div (vector (NonLocal) 3699) 'python-mod (vector (NonLocal) 3702) 'python-lt (vector (NonLocal) 3705) 'python-lte (vector (NonLocal) 3708) 'python-gt (vector (NonLocal) 3711) 'python-gte (vector (NonLocal) 3714) 'python-eq (vector (NonLocal) 3717) 'python-notEq (vector (NonLocal) 3720) 'python-is (vector (NonLocal) 3723) 'python-isNot (vector (NonLocal) 3726) 'python-in (vector (NonLocal) 3729) 'python-notIn (vector (NonLocal) 3732) 'len (vector (NonLocal) 3734) 'True (vector (NonLocal) 3656) '___assertTrue (vector (NonLocal) 3658) '___assertFalse (vector (NonLocal) 3660) 'e-1 (vector (Local) 3747) '___assertIn (vector (NonLocal) 3663) '___assertNotIn (vector (NonLocal) 3666) '___assertEqual (vector (NonLocal) 3669) '___assertNotEqual (vector (NonLocal) 3672) '___assertIs (vector (NonLocal) 3675) '___assertIsNot (vector (NonLocal) 3678) '___assertRaises (vector (NonLocal) 3682) '___fail (vector (NonLocal) 3684) '_Object (vector (NonLocal) 3738) 'float (vector (NonLocal) 3744) 'int (vector (NonLocal) 3746)) '(e-1) 'no-vararg (CIf (CPrim2 'or (CPrim2 'or (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "set")) (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "list"))) (CPrim2 'or (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "tuple")) (CPrim2 'eq (CPrim1 'tagof (CId 'e-1)) (CStr "string")))) (CPrim1 'to-list (CId 'e-1)) (CError (CApp (CId 'TypeError) '() '() (CHash (hash (CStr "__size__") (CNum 0)) (cType "list" (CId 'list)))))) (list (VStr "")) 1996))) 1997 (Type "primitive-class" #0=(VHash (box (hash (VStr "__name__") (VStr "Object") (VStr "__init__") (VClosure (hash 'abs (vector (NonLocal) 3736) 'print (vector (NonLocal) 3655) 'python-add (vector (NonLocal) 3687) 'python-sub (vector (NonLocal) 3690) 'python-mult (vector (NonLocal) 3693) 'python-div (vector (NonLocal) 3696) 'python-floor-div (vector (NonLocal) 3699) 'python-mod (vector (NonLocal) 3702) 'python-lt (vector (NonLocal) 3705) 'python-lte (vector (NonLocal) 3708) 'python-gt (vector (NonLocal) 3711) 'python-gte (vector (NonLocal) 3714) 'python-eq (vector (NonLocal) 3717) 'python-notEq (vector (NonLocal) 3720) 'python-is (vector (NonLocal) 3723) 'python-isNot (vector (NonLocal) 3726) 'python-in (vector (NonLocal) 3729) 'python-notIn (vector (NonLocal) 3732) 'len (vector (NonLocal) 3734) 'True (vector (NonLocal) 3656) '___assertTrue (vector (NonLocal) 3658) '___assertFalse (vector (NonLocal) 3660) 'e-1 (vector (Local) 3737) '___assertIn (vector (NonLocal) 3663) '___assertNotIn (vector (NonLocal) 3666) '___assertEqual (vector (NonLocal) 3669) '___assertNotEqual (vector (NonLocal) 3672) '___assertIs (vector (NonLocal) 3675) '___assertIsNot (vector (NonLocal) 3678) '___assertRaises (vector (NonLocal) 3682) '___fail (vector (NonLocal) 3684)) '(e-1) 'no-vararg (CPass) (list (VFalse)) 1986))) 1987 (Type "class" (VNone)))))))) 2008))) 2009 (Type "primitive-class" #0#)))) (VStr "__size__") (VNum 2)))
=====================================================
= Results for dict-items.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
getAttr: non-existent attribute, Unbound Identifier: (VStr "items")
=====================================================
= Results for dict-set-keys.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((nodetype . "BitAnd"))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for dict-update.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
getAttr: non-existent attribute, Unbound Identifier: (VStr "update")
=====================================================
= Results for dict-values-set.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((nodetype . "BitAnd"))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for invalid-reraise.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
exception: No exception raised
=====================================================
= Results for iter-classes.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
exception: TypeError'#&#hash()
=====================================================
= Results for iter-comprehensions.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((nodetype . "ListComp")
        (generators
         .
         (#hasheq((target
                   .
                   #hasheq((id . "i")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Store")))))
                  (iter
                   .
                   #hasheq((id . "seq")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Load")))))
                  (nodetype . "comprehension")
                  (ifs . ()))
          #hasheq((target
                   .
                   #hasheq((id . "j")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Store")))))
                  (iter
                   .
                   #hasheq((id . "seq")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Load")))))
                  (nodetype . "comprehension")
                  (ifs . ()))
          #hasheq((target
                   .
                   #hasheq((id . "k")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Store")))))
                  (iter
                   .
                   #hasheq((id . "seq")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Load")))))
                  (nodetype . "comprehension")
                  (ifs . ()))))
        (elt
         .
         #hasheq((elts
                  .
                  (#hasheq((id . "i")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Load"))))
                   #hasheq((id . "j")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Load"))))
                   #hasheq((id . "k")
                           (nodetype . "Name")
                           (ctx . #hasheq((nodetype . "Load"))))))
                 (nodetype . "Tuple")
                 (ctx . #hasheq((nodetype . "Load"))))))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
=====================================================
= Results for iter-misc.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound identifier error: iter
=====================================================
= Results for iter-simple.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound identifier error: iter
=====================================================
= Results for iter-stop.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound identifier error: iter
=====================================================
= Results for freevar-in-method.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
exception: Assert failed: values are not Equal: functionvar
=====================================================
= Results for locals-class.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound identifier error: locals
=====================================================
= Results for locals-function.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound identifier error: locals
=====================================================
= Results for nonlocal-class.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
getAttr: non-existent attribute, Unbound Identifier: (VStr "__class__")
=====================================================
= Results for nonlocal-function.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
interp-CSet: For now, CSet only support ids that are symbols or CAttributes or CSubscripts
=====================================================
= Results for unbound-local.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupStore: 13360Unbound location error.
=====================================================
= Results for test-super.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound identifier error: super
=====================================================
= Results for test_simple_string_ops.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===

=== Expected stderr ===

=== Actual stderr ===
lookupEnv: Unbound identifier error: min
=====================================================
= Results for test_string_slices.py =
=====================================================
=== Expected stdout ===

=== Actual stdout ===
PARSING: Haven't handled a case yet: 
#hasheq((nodetype . "Slice") (upper . #\nul) (lower . #\nul) (step . #\nul))

=== Expected stderr ===

=== Actual stderr ===
parse: error is described above.
